generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?  @db.Text
  price       Decimal  @db.Decimal(10, 2)
  stock       Int     @default(0)
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  isTombolaEligible Boolean? @default(false) 
  isDigitalProduct Boolean? @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@map("products")
  }


model Category {
  id           Int     @id @default(autoincrement())
  moduleName   String  @db.VarChar(50)
  name         String  @db.VarChar(100) @unique
  isActive     Boolean? @default(true) 
  products     Product[]
  parentCategory     Category?  @relation("CategoryToCategory", fields: [parentCategoryId], references: [id])
  childCategories    Category[] @relation("CategoryToCategory")
  parentCategoryId Int? 
  displayOrder  Int 
  icon         String? @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@map("categories")
}


model User {
  id        Int   @id @default(autoincrement())
  userName  String   @db.VarChar(50)  @unique
  email     String   @db.VarChar(100) @unique
  passwordHash  String? @db.VarChar(255)
  role      Role? @relation(fields: [roleId], references: [id])
  roleId    Int? @default(1)
  googleId String? @db.VarChar(255) @unique
  createdAt DateTime @default(now())
  @@map("users")
  @@index([email], name: "idx_users_email")
}

model Role {
  id        Int   @id @default(autoincrement())
  users     User[]
  roleName  RoleType @unique
  createdAt DateTime @default(now())
  @@map("roles")
}

enum RoleType {
  Guest
  RegisteredUser
  CustomerSupport
  Moderator
  Administrator
}